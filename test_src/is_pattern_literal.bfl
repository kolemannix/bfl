fn main(): int {
  // Unit
  val u = ();
  assert(u is ());

  val i = 42;
  assert(!(i is 41));
  assert(i is 42);

  val s = "hello";
  assert(s is "hello");
  assert(!(s is "world"));

  val c = 'x';
  assert(c is 'x');
  assert(!(c is 'f'));

  val b = true;
  assert(!(b is false));
  assert(b is true);

  val foo = { x: 1, y: "asdf" };
  // Wildcard pattern
  if foo is _ {
    assert(true);
  };

  // Variable pattern
  if foo is f {
    assert(f.x == 1 and f.y == "asdf");
  };

  // Record pattern, with integer pattern
  // and nested variable pattern
  if foo is { x: 1, y } {
    assert(y == "asdf");
  };

  0
}
