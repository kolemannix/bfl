type Box<T> = { value: T }

type Result<T, E> = enum Ok(T) | Err(E)

// type Flat = { value: int }
fn main(): int {
  // Consider f(a, b) call syntax
  val b: Box<int> = { value: 0 };
  val c: Box<bool> = { value: true };
  val c2: Box<bool> = { value: false };
  assert(b.value == 1);

  b.value
}
