type E = enum A(int) | B
namespace E {
  fn value(self: E): int {
    when self {
      | .A(i) -> i
    }
  }
}
fn main(): int {
  val x: E = .A(42);
  val y: E.A = .A(42);
  val z: E = .B;
  assert(x.value() == z.value());
  //assert(x.value() == y.value());
  // val a = x.as<E.A>();
  0
}
