// Unqualified
// - Functions must be lowercase
// - Namespaces must be lowercase
// - Different TokenKind for lowercase ident and uppercase ident
// - Need to implement the tags
type Color = enum Red, Green, Blue, Custom(string) -> symbol (u64)
type Y = enum Red, Green, Blue -> symbol (u64)

{ symbol, payload }

fn asdf(): enum Red, Green, Blue, Custom(int) {
  val foo: Red = Red;
  Checked(42);
  val bar: Custom(int) = .Custom(123);
  bar: #ret
}

// A recursive one
// type Nat = Zero | S(Nat)

fn main(): int {
  load_config();
  0
}